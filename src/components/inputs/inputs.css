.textfield-group {
	position: relative;
  padding-top: 0.5rem;
  font-size: 14px;
}
.textfield-input {
	height: 1.9rem;
	width: 100%;
	border: none;
	padding: 0px;
	margin: 0px;
	font-size: 14px;
	background: transparent;
}
.textarea-input {
	width: 100%;
	border: none;
	padding: 0px;
	margin: 0px;
	font-size: 14px;
	background: transparent;
	resize: none;
}
.upload {
	width: 100%;
	padding-top: 100%;
	border-radius: 5px;
	overflow: hidden;
	position: relative;
}
.empty-drop-zone {
	width: 100%;
	height: 100%;
    background-color: #80808036;
    border: 2px dashed #808080;
    color: #808080;
    position: absolute;
    top: 0;
    left: 0;
}
.upload-input {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	opacity: 0;
	cursor: pointer;
    z-index: 1;
}
.drop-zone-description {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	text-align: center;
	width: 100%;
}
.upload-preview {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background-position: center;
	background-size: cover;
	background-repeat: no-repeat;
}
.upload-input:hover ~ .empty-drop-zone {
	background-color: #ecbea850;
	border-color: #fbae17;
	color: #fe6501;
}

.textfield-input.autocomplete::placeholder {
	color: transparent;
}

input:-webkit-autofill {
    animation-name: onAutoFillStart;
    animation-fill-mode: both;
    transition: background-color 50000s ease-in-out 0s;
}

input:not(:-webkit-autofill) {
    -webkit-animation-name: onAutoFillCancel;
            animation-name: onAutoFillCancel;
}

@-webkit-keyframes onAutoFillStart {
from {/**/
}
to {/**/
}
}
@keyframes onAutoFillStart {
from {/**/
}
to {/**/
}
}
@-webkit-keyframes onAutoFillCancel {
from {/**/
}
to {/**/
}
}
@keyframes onAutoFillCancel {
from {/**/
}
to {/**/
}
}


.textfield-input:focus,
.textarea-input:focus {
	outline: none;
}
.textfield-label {
	position: absolute;
  top: 0.25rem;
  left: 0;
	pointer-events: none;
	padding-left: 0.125rem;
	z-index: 1;
	color: #b3b3b3;
	font-size: 1rem;
	font-weight: normal;
	-webkit-transition: all 0.28s ease;
	transition: all 0.28s ease;
}
.textfield-input:focus ~ .textfield-label,
.textfield-input.active ~ .textfield-label,
.textarea-input:focus ~ .textfield-label,
.textarea-input.active ~ .textfield-label {
	font-size: 0.8rem;
	color: var(--main-color);
	top: -0.25rem;
	left: 0;
}
.textfield-bar {
	position: relative;
	border-bottom: 0.0625rem solid #999;
	display: block;
}
.textfield-bar::before {
	content: '';
	height: 0.125rem;
	width: 0;
	left: 50%;
	bottom: -0.0625rem;
	position: absolute;
	background: var(--main-color);
	-webkit-transition: left 0.28s ease, width 0.28s ease;
	transition: left 0.28s ease, width 0.28s ease;
	z-index: 2;
}
.textfield-input.invalid ~ .textfield-bar::before {
	background: red;
}
.textfield-input.invalid.active ~  .textfield-label,
.textfield-input.invalid:focus ~ .textfield-label {
	color: red;
}
.textfield-input:focus ~ .textfield-bar::before,
.textfield-input.active ~ .textfield-bar::before,
.textarea-input:focus ~ .textfield-bar::before,
.textarea-input.active ~ .textfield-bar::before {
	width: 100%;
	left: 0;
}

.error-message {
	position: absolute;
	color: red;
	font-size: 12px;
}

input.apple-switch {
  position: relative;
  -webkit-appearance: none;
  outline: none;
  width: 50px;
  height: 30px;
  background-color: #fff;
  border: 1px solid #D9DADC;
  border-radius: 50px;
  box-shadow: inset -20px 0 0 0 #fff;
  cursor: pointer;
  transition: box-shadow .04s;
}
.input.apple-switch:focus {
  outline: none;
}
input.apple-switch:after {
  content: "";
  position: absolute;
  top: 1px;
  left: 1px;
  background: #fff;
  width: 26px;
  height: 26px;
  border-radius: 50%;
  box-shadow: 2px 4px 6px rgba(0,0,0,0.2);
  transition: left .2s;
}
input.apple-switch:checked {
  box-shadow: inset 20px 0 0 0 rgb(78,199,238);
  border-color: rgb(78,199,238);
  outline: none;
}
input[type=checkbox]:focus {
  outline: none;
}
input.apple-switch:checked:after {
  left: 20px;
  box-shadow: -2px 4px 6px rgba(0,0,0,0.2);
}

.custom-checkbox {
    opacity: 0;
    position: absolute;
}

.custom-checkbox ~ label::before {
    content: "";
    display: inline-block;
    height: 16px;
    width: 16px;
    border: 1px solid #707070; 
    border-radius: 2px;  
}

.custom-checkbox ~ label::after {
    content: "";
    display: inline-block;
    height: 6px;
    width: 9px;
    border-left: 2px solid #fff;
    border-bottom: 2px solid #fff;
    transform: rotate(-45deg);
}

.custom-checkbox ~ label {
    position: relative;
}
.custom-checkbox ~ label::before,
.custom-checkbox ~ label::after {
    position: absolute;
}
/*Outer-box*/
.custom-checkbox ~ label::before {
    top: -4px;
}
/*Checkmark*/
.custom-checkbox ~ label::after {
    left: 4px;
    top: 0;
}

/*Hide the checkmark by default*/
input[type="checkbox"].custom-checkbox ~ label::after {
    content: none;
}
input[type="checkbox"]:checked.custom-checkbox ~ label::before {
    border-color: var(--main-color);
    background: var(--main-color);
}
/*Unhide the checkmark on the checked state*/
input[type="checkbox"]:checked.custom-checkbox ~ label::after {
    content: "";
}
.checkbox-title {
	position: absolute;
    white-space: nowrap;
    left: 30px;
    top: -7px;
}

.switch {
	background: #fff;
    border: 1px solid #E5E5E5;
	margin: 0;
	height: 40px;
    width: 40px;
    border-radius: 100%;
    box-shadow: 0px 1px 1px 0px rgba(0, 0, 0, 0.05);
    cursor: pointer;
    transition: background 0.25s ease;
    text-align: left;
}

.switch__inner {
	position: relative;
}

.switch__input {
    appearance: none;
}

.switch.checked .switch__inner::before {
    -webkit-transform: rotate(47deg);
    transform: rotate(47deg);
    width: 10px;
    top: 20px;
    left: 10px;
}

.switch.checked .switch__inner::before,
.switch.checked .switch__inner::after {
    background: #99BF4C;
    transition: all 0.2s ease;
}

.switch__inner::before {
    height: 1px;
    width: 19px;
    top: 23px;
    left: 14px;
}

.switch__inner::before,
.switch__inner::after {
    position: absolute;
    content: '';
    background: #fff;
    transition: all 0.3s ease;
}

.switch.checked .switch__inner::after {
    -webkit-transform: rotate(45deg);
    transform: rotate(45deg);
    left: 24px;
}

.switch__inner::after {
    width: 1px;
    height: 19px;
    top: 14px;
    left: 23px;
}

/*action*/

.switch .switch__inner::before {
    -webkit-transform: rotate(45deg);
    transform: rotate(45deg);
    width: 19px;
    top: 17px;
    left: 10px;
}

.switch .switch__inner::before,
.switch .switch__inner::after {
    background: #FF0000;
}

.switch .switch__inner::after {
    height: 19px;
    top: 8px;
    left: 19px;
    transform: rotate(45deg);
}
